{"version":3,"sources":["redux/contacts/contacts-action.js","redux/contacts/contacts-reducer.js","redux/store.js","components/PrivateRouter.js","components/PublicRouter.js","components/Navigation/NavBar/AppNav.js","components/Navigation/Navigation.js","App.js","index.js","components/Navigation/Navigation.module.css","redux/auth/auth-actions.js","components/Navigation/NavBar/AppNav.module.css","redux/auth/auth-operations.js","redux/auth/auth-reducer.js","redux/auth/auth-selectors.js"],"names":["initContactsRequest","createAction","initContactsSuccess","initContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","filterContacts","itemsReducers","createReducer","_","payload","state","filter","contact","id","loading","getCurrentUserRequest","getCurrentUserSuccess","gentCurrentUserError","reducers","filterReducer","addContactReducer","persistConfig","key","storage","whitelist","contactsReducer","combineReducers","items","addContact","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistedReducer","persistReducer","authReducers","store","configureStore","reducer","auth","contacts","persistor","persistStore","mapDispatchToProps","noAuthenticated","authActions","getCurrentUserError","connect","token","authSelectors","getToken","Component","component","routeProps","render","props","Boolean","to","restricted","className","s","app__nav","nav__link","htmlColor","style","fontSize","nav__contacts","Navigation","this","userName","onLogout","isAutorized","navigation","user__nav","user__name","onClick","logout__button","authOperations","logoutUser","user","name","isAutorizedUser","HomePage","lazy","ContactsPage","RegistrationPage","LoginPage","App","getCurrentUser","console","log","Container","maxWidth","fallback","path","exact","ReactDOM","StrictMode","document","getElementById","module","exports","userRegisterRequest","userRegisterSuccess","userRegisterError","userLoginRequest","userLoginSuccess","userLoginError","userLogoutRequest","userLogoutSuccess","userLogoutError","axios","defaults","baseURL","headers","common","Authorization","dispatch","getState","a","get","data","registerNewUser","newUser","post","message","loginUser","error","initialUser","email","userReducer","__","tokenReducer","isAutorizedReducer"],"mappings":"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","file":"static/js/main.6434666c.chunk.js","sourcesContent":["// import { v4 as uuidv4 } from 'uuid';\nimport { createAction } from '@reduxjs/toolkit';\n\nconst initContactsRequest = createAction('contacts/initContactsRequest');\nconst initContactsSuccess = createAction('contacts/initContactsSuccess');\nconst initContactsError = createAction('contacts/initContactsError');\n\nconst addContactRequest = createAction('contacts/addContactRequest');\nconst addContactSuccess = createAction('contacts/addContactSuccess');\nconst addContactError = createAction('contacts/addContactError');\n\nconst deleteContactRequest = createAction('contacts/deleteContactRequest');\nconst deleteContactSuccess = createAction('contacts/deleteContactSuccess');\nconst deleteContactError = createAction('contacts/deleteContactError');\n\nconst filterContacts = createAction('contact/filter');\n\nexport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  initContactsRequest,\n  initContactsSuccess,\n  initContactsError,\n  filterContacts,\n};\n","// import * as actions from './contacts-action';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  gentCurrentUserError,\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n} from '../auth/auth-actions';\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  filterContacts,\n  initContactsRequest,\n  initContactsSuccess,\n  initContactsError,\n} from './contacts-action';\n\nconst itemsReducers = createReducer([], {\n  [initContactsSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(contact => contact.id !== payload),\n});\n\nconst loading = createReducer(false, {\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n  [initContactsRequest]: () => true,\n  [initContactsSuccess]: () => false,\n  [initContactsError]: () => false,\n  [getCurrentUserRequest]: () => true,\n  [getCurrentUserSuccess]: () => false,\n  [gentCurrentUserError]: () => false,\n});\n\nconst filterReducer = createReducer('', {\n  [filterContacts]: (_, { payload }) => payload,\n});\n\nconst addContactReducer = createReducer(false, {\n  [addContactSuccess]: () => false,\n});\n\nconst reducers = { itemsReducers, filterReducer, loading, addContactReducer };\n\nexport default reducers;\n","import {\n  configureStore,\n  combineReducers,\n  getDefaultMiddleware,\n} from '@reduxjs/toolkit';\nimport reducers from './contacts/contacts-reducer';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage'; // defaults to localStorage for web\nimport authReducers from './auth';\n\nconst persistConfig = {\n  key: 'token',\n  storage,\n  whitelist: ['token'],\n};\n\nconst contactsReducer = combineReducers({\n  items: reducers.itemsReducers,\n  filter: reducers.filterReducer,\n  loading: reducers.loading,\n  addContact: reducers.addContactReducer,\n});\n\nconst middleware = getDefaultMiddleware({\n  serializableCheck: {\n    ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n  },\n});\n\nconst persistedReducer = persistReducer(persistConfig, authReducers);\n\nlet store = configureStore({\n  reducer: {\n    auth: persistedReducer,\n    contacts: contactsReducer,\n  },\n  middleware,\n});\n\nlet persistor = persistStore(store);\n\nexport { store, persistor };\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect, Route } from 'react-router';\nimport { authActions, authSelectors } from '../redux/auth';\n\nconst PrivateRouter = ({\n  component: Component,\n  token,\n  noAuthenticated,\n  ...routeProps\n}) => {\n  return (\n    <Route\n      {...routeProps}\n      render={props =>\n        Boolean(token) ? <Component {...props} /> : <Redirect to=\"/login\" />\n      }\n    />\n  );\n};\n\nconst mapStateToProps = state => ({\n  token: authSelectors.getToken(state),\n});\n\nconst mapDispatchToProps = {\n  noAuthenticated: authActions.getCurrentUserError,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PrivateRouter);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect, Route } from 'react-router';\nimport { authSelectors } from '../redux/auth';\n\nconst PublicRouter = ({ component: Component, token, ...routeProps }) => (\n  <Route\n    {...routeProps}\n    render={props =>\n      Boolean(token) && routeProps.restricted ? (\n        <Redirect to=\"/contacts\" />\n      ) : (\n        <Component {...props} />\n      )\n    }\n  />\n);\n\nconst mapStateToProps = state => ({\n  token: authSelectors.getToken(state),\n});\n\nexport default connect(mapStateToProps)(PublicRouter);\n","import { NavLink } from 'react-router-dom';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { authSelectors } from '../../../redux/auth';\nimport s from './AppNav.module.css';\nimport ContactPhoneIcon from '@material-ui/icons/ContactPhone';\nimport HomeIcon from '@material-ui/icons/Home';\n\nconst AppNav = ({ token }) => {\n  return (\n    <div className={s.app__nav}>\n      <NavLink to=\"/\" className={s.nav__link}>\n        <HomeIcon htmlColor=\"#45B39D\" style={{ fontSize: 30 }} />\n      </NavLink>\n\n      {Boolean(token) && (\n        <NavLink to=\"/contacts\" className={s.nav__contacts}>\n          <ContactPhoneIcon htmlColor=\"#45B39D\" style={{ fontSize: 30 }} />\n        </NavLink>\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  token: authSelectors.getToken(state),\n});\n\nexport default connect(mapStateToProps)(AppNav);\n","import { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { authOperations, authSelectors } from '../../redux/auth';\nimport s from './Navigation.module.css';\nimport AppNav from './NavBar/AppNav';\nimport Exit from '@material-ui/icons/ExitToApp';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\n\nclass Navigation extends Component {\n  render() {\n    const { token, userName, onLogout, isAutorized } = this.props;\n\n    return (\n      <div className={s.navigation}>\n        <AppNav />\n        {Boolean(token) ? (\n          <>\n            <div className={s.user__nav}>\n              <AccountCircleIcon\n                fontSize=\"large\"\n                htmlColor=\"#45B39D\"\n                style={{ fontSize: 30 }}\n              />\n              {isAutorized && (\n                <p className={s.user__name}>Welcome, {userName}</p>\n              )}\n              <button onClick={onLogout} className={s.logout__button}>\n                <Exit\n                  fontSize=\"large\"\n                  htmlColor=\"#45B39D\"\n                  style={{ fontSize: 30 }}\n                />\n              </button>\n            </div>\n          </>\n        ) : (\n          <>\n            <NavLink to=\"/login\" className={s.nav__link}>\n              Login\n            </NavLink>\n            <NavLink to=\"/register\" className={s.nav__link}>\n              Registration\n            </NavLink>\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  token: authSelectors.getToken(state),\n  userName: state.auth.user.name,\n  isAutorized: authSelectors.isAutorizedUser(state),\n});\n\nconst mapDispatchToProps = {\n  onLogout: authOperations.logoutUser,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Navigation);\n","import { Component, Suspense, lazy } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { authOperations, authSelectors } from './redux/auth';\nimport { Container } from '@material-ui/core';\nimport PrivateRouter from './components/PrivateRouter';\nimport PublicRouter from './components/PublicRouter';\nimport Navigation from './components/Navigation';\n\nconst HomePage = lazy(() =>\n  import('./views/HomePage' /* webpackChunkName: \"home-page\" */),\n);\nconst ContactsPage = lazy(() =>\n  import(\n    './views/ContactsPage' /* webpackChunkName: \"contacts-page\" */\n  ),\n);\nconst RegistrationPage = lazy(() =>\n  import('./views/RegisterPage' /* webpackChunkName: \"register-page\" */),\n);\nconst LoginPage = lazy(() =>\n  import('./views/LoginPage' /* webpackChunkName: \"login-page\" */),\n);\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.getCurrentUser();\n  }\n\n  render() {\n    console.log(Boolean(this.props.token));\n    return (\n      <>\n        <Container maxWidth=\"md\">\n          <Navigation />\n          <Suspense fallback=\"loading\">\n            <Switch>\n              <Route path=\"/\" exact component={HomePage} />\n              <PrivateRouter path=\"/contacts\" exact component={ContactsPage} />\n              <PublicRouter\n                path=\"/login\"\n                restricted\n                exact\n                component={LoginPage}\n              />\n              <PublicRouter\n                path=\"/register\"\n                restricted\n                exact\n                component={RegistrationPage}\n              />\n            </Switch>\n          </Suspense>\n        </Container>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  token: authSelectors.getToken(state),\n});\n\nconst mapDispatchToProps = {\n  getCurrentUser: authOperations.getCurrentUser,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store, persistor } from './redux/store';\nimport './index.css';\nimport App from './App';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigation\":\"Navigation_navigation__1VtLy\",\"user__nav\":\"Navigation_user__nav__1sYAA\",\"logout__button\":\"Navigation_logout__button__cb9hl\",\"nav__link\":\"Navigation_nav__link__3bFyi\",\"user__name\":\"Navigation_user__name__2k4I-\",\"user__circle\":\"Navigation_user__circle__3hlqF\",\"user__avatar\":\"Navigation_user__avatar__29NKV\"};","import { createAction } from '@reduxjs/toolkit';\n\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\nconst gentCurrentUserError = createAction('auth/getCurrentUserError');\n\nconst userRegisterRequest = createAction('auth/userRegisterRequest');\nconst userRegisterSuccess = createAction('auth/userRegisterSuccess');\nconst userRegisterError = createAction('auth/userRegisterError');\n\nconst userLoginRequest = createAction('auth/userLoginRequest');\nconst userLoginSuccess = createAction('auth/userLoginSuccess');\nconst userLoginError = createAction('auth/userLoginError');\n\nconst userLogoutRequest = createAction('auth/userLogoutRequest');\nconst userLogoutSuccess = createAction('auth/userLogoutSuccess');\nconst userLogoutError = createAction('auth/userLogoutError');\n\nexport {\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  gentCurrentUserError,\n  userLoginRequest,\n  userLoginSuccess,\n  userLoginError,\n  userRegisterRequest,\n  userRegisterSuccess,\n  userRegisterError,\n  userLogoutRequest,\n  userLogoutSuccess,\n  userLogoutError,\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app__nav\":\"AppNav_app__nav__m1Qe7\",\"nav__contacts\":\"AppNav_nav__contacts__165Pl\",\"nav__link\":\"AppNav_nav__link__sp8y_\"};","import axios from 'axios';\nimport {\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  gentCurrentUserError,\n  userRegisterRequest,\n  userRegisterSuccess,\n  userRegisterError,\n  userLoginError,\n  userLoginRequest,\n  userLoginSuccess,\n  userLogoutRequest,\n  userLogoutError,\n  userLogoutSuccess,\n} from './auth-actions';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unSet() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\nconst getCurrentUser = () => async (dispatch, getState) => {\n  const {\n    auth: { token: getToken },\n  } = getState();\n\n  if (!getToken) {\n    return;\n  }\n\n  token.set(getToken);\n  dispatch(getCurrentUserRequest());\n\n  try {\n    const { data } = await axios.get('/users/current');\n\n    dispatch(getCurrentUserSuccess(data));\n  } catch (error) {\n    dispatch(gentCurrentUserError(error));\n  }\n};\n\nconst registerNewUser = newUser => async dispatch => {\n  dispatch(userRegisterRequest());\n\n  try {\n    const { data } = await axios.post('/users/signup', newUser);\n\n    token.set(data.token);\n    dispatch(userRegisterSuccess(data));\n  } catch (error) {\n    console.log('registration error');\n    dispatch(userRegisterError(error.message));\n  }\n};\n\nconst loginUser = user => async dispatch => {\n  dispatch(userLoginRequest());\n\n  try {\n    const { data } = await axios.post('/users/login', user);\n\n    token.set(data.token);\n    dispatch(userLoginSuccess(data));\n  } catch (error) {\n    dispatch(userLoginError(error.message));\n  }\n};\n\nconst logoutUser = () => async dispatch => {\n  dispatch(userLogoutRequest());\n\n  try {\n    axios.post('/users/logout');\n\n    token.unSet();\n    dispatch(userLogoutSuccess());\n  } catch (error) {\n    dispatch(userLogoutError(error.message));\n  }\n};\n\nexport { getCurrentUser, registerNewUser, loginUser, logoutUser };\n","import { combineReducers, createReducer } from '@reduxjs/toolkit';\nimport {\n  gentCurrentUserError,\n  getCurrentUserSuccess,\n  userLoginError,\n  userLoginSuccess,\n  userLogoutSuccess,\n  userRegisterError,\n  userRegisterSuccess,\n} from './auth-actions';\n\nconst initialUser = { email: null, name: null };\n\nconst userReducer = createReducer(initialUser, {\n  [getCurrentUserSuccess]: (_, { payload }) => payload,\n  [userRegisterSuccess]: (_, { payload }) => payload.user,\n  [userLoginSuccess]: (_, { payload }) => payload.user,\n  [userLogoutSuccess]: (_, __) => initialUser,\n});\n\nconst tokenReducer = createReducer(null, {\n  [userRegisterSuccess]: (_, { payload }) => payload.token,\n  [userLoginSuccess]: (_, { payload }) => payload.token,\n  [userLogoutSuccess]: (_, __) => null,\n  [gentCurrentUserError]: () => null,\n});\n\nconst isAutorizedReducer = createReducer(false, {\n  [userRegisterSuccess]: () => true,\n  [getCurrentUserSuccess]: () => true,\n  [userLoginSuccess]: () => true,\n  [userLoginError]: () => false,\n  [userLogoutSuccess]: () => false,\n  [userRegisterError]: () => false,\n  [gentCurrentUserError]: () => false,\n});\n\nconst authReducers = combineReducers({\n  user: userReducer,\n  token: tokenReducer,\n  isAutorized: isAutorizedReducer,\n});\n\nexport default authReducers;\n","const isAutorizedUser = state => state.auth.isAutorized;\n\nconst getToken = state => state.auth.token;\n\nexport { isAutorizedUser, getToken };\n"],"sourceRoot":""}
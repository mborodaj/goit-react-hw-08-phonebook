{"version":3,"sources":["App.module.css","components/LoginForm/LoginForm.module.css","components/LoginForm/LoginForm.js","views/LoginPage.js"],"names":["module","exports","validation","Yup","email","required","password","min","mapDispatchToProps","onLoginUser","authOperations","loginUser","connect","formik","useFormik","initialValues","validationSchema","onSubmit","values","className","s","form__container","form__title","handleSubmit","form","TextField","style","marginBottom","fullWidth","id","name","label","type","value","onChange","handleChange","error","touched","Boolean","errors","helperText","Button","disableRipple","color","variant","LoginPage","Paper","elevation","login__container"],"mappings":"mIACAA,EAAOC,QAAU,CAAC,IAAM,iBAAiB,UAAY,uBAAuB,MAAQ,mBAAmB,gBAAkB,6BAA6B,SAAW,sBAAsB,uBAAyB,oCAAoC,YAAc,yBAAyB,iBAAmB,8BAA8B,eAAiB,4BAA4B,sBAAwB,qC,oBCAjZD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,YAAc,iC,sICMzDC,EAAaC,IAAW,CAC5BC,MAAOD,IAAW,oBACfC,MAAM,uBACNC,SAAS,qBACZC,SAAUH,IAAW,uBAClBI,IAAI,EAAG,qDACPF,SAAS,0BAyDRG,EAAqB,CACzBC,YAAaC,IAAeC,WAGfC,cAAQ,KAAMJ,EAAdI,EA1DG,SAAC,GAAqB,IAAnBH,EAAkB,EAAlBA,YACbI,EAASC,YAAU,CACvBC,cAAe,CACbX,MAAO,GACPE,SAAU,IAEZU,iBAAkBd,EAClBe,SAAU,SAAAC,GACRT,EAAYS,MAIhB,OACE,sBAAKC,UAAWC,IAAEC,gBAAlB,UACE,oBAAIF,UAAWC,IAAEE,YAAjB,mBACA,uBAAML,SAAUJ,EAAOU,aAAcJ,UAAWC,IAAEI,KAAlD,UACE,cAACC,EAAA,EAAD,CACEC,MAAO,CAAEC,aAAc,IACvBC,WAAS,EACTC,GAAG,QACHC,KAAK,QACLC,MAAM,QACNC,KAAK,QACLC,MAAOpB,EAAOK,OAAOd,MACrB8B,SAAUrB,EAAOsB,aACjBC,MAAOvB,EAAOwB,QAAQjC,OAASkC,QAAQzB,EAAO0B,OAAOnC,OACrDoC,WAAY3B,EAAOwB,QAAQjC,OAASS,EAAO0B,OAAOnC,QAEpD,cAACqB,EAAA,EAAD,CACEC,MAAO,CAAEC,aAAc,IACvBC,WAAS,EACTC,GAAG,WACHC,KAAK,WACLC,MAAM,WACNC,KAAK,WACLC,MAAOpB,EAAOK,OAAOZ,SACrB4B,SAAUrB,EAAOsB,aACjBC,MAAOvB,EAAOwB,QAAQ/B,UAAYgC,QAAQzB,EAAO0B,OAAOjC,UACxDkC,WAAY3B,EAAOwB,QAAQ/B,UAAYO,EAAO0B,OAAOjC,WAEvD,cAACmC,EAAA,EAAD,CACEC,eAAa,EACbC,MAAM,UACNC,QAAQ,YACRhB,WAAS,EACTI,KAAK,SALP,4B,kBC3COa,UARG,WAChB,OACE,cAACC,EAAA,EAAD,CAAOC,UAAW,EAAG5B,UAAWC,IAAE4B,iBAAlC,SACE,cAAC,EAAD","file":"static/js/login-page.559e6771.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\",\"container\":\"App_container__1MQN3\",\"title\":\"App_title__-GfWs\",\"contacts__title\":\"App_contacts__title__3a-ik\",\"add__btn\":\"App_add__btn__1cn98\",\"filter__add__container\":\"App_filter__add__container__2iOpB\",\"main__title\":\"App_main__title__15qBx\",\"login__container\":\"App_login__container__1CoUi\",\"reg__container\":\"App_reg__container__1clPi\",\"addContact__container\":\"App_addContact__container__3Rk0R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"LoginForm_form__1tF8D\",\"form__title\":\"LoginForm_form__title__3yK8-\"};","import * as Yup from 'yup';\nimport { useFormik } from 'formik';\nimport { TextField, Button } from '@material-ui/core';\nimport s from './LoginForm.module.css';\nimport { connect } from 'react-redux';\nimport { authOperations } from '../../redux/auth';\n\nconst validation = Yup.object({\n  email: Yup.string('Enter your email')\n    .email('Enter a valid email')\n    .required('Email is required'),\n  password: Yup.string('Enter your password')\n    .min(7, 'Password should be of minimum 7 characters length')\n    .required('Password is required'),\n});\n\nconst LoginForm = ({ onLoginUser }) => {\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    validationSchema: validation,\n    onSubmit: values => {\n      onLoginUser(values);\n    },\n  });\n\n  return (\n    <div className={s.form__container}>\n      <h2 className={s.form__title}>Login</h2>\n      <form onSubmit={formik.handleSubmit} className={s.form}>\n        <TextField\n          style={{ marginBottom: 10 }}\n          fullWidth\n          id=\"email\"\n          name=\"email\"\n          label=\"Email\"\n          type=\"email\"\n          value={formik.values.email}\n          onChange={formik.handleChange}\n          error={formik.touched.email && Boolean(formik.errors.email)}\n          helperText={formik.touched.email && formik.errors.email}\n        />\n        <TextField\n          style={{ marginBottom: 20 }}\n          fullWidth\n          id=\"password\"\n          name=\"password\"\n          label=\"Password\"\n          type=\"password\"\n          value={formik.values.password}\n          onChange={formik.handleChange}\n          error={formik.touched.password && Boolean(formik.errors.password)}\n          helperText={formik.touched.password && formik.errors.password}\n        />\n        <Button\n          disableRipple\n          color=\"primary\"\n          variant=\"contained\"\n          fullWidth\n          type=\"submit\"\n        >\n          Login\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = {\n  onLoginUser: authOperations.loginUser,\n};\n\nexport default connect(null, mapDispatchToProps)(LoginForm);\n","import React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport LoginForm from '../components/LoginForm/LoginForm';\nimport s from '../App.module.css';\n\nconst LoginPage = () => {\n  return (\n    <Paper elevation={3} className={s.login__container}>\n      <LoginForm />\n    </Paper>\n  );\n};\n\nexport default LoginPage;\n"],"sourceRoot":""}
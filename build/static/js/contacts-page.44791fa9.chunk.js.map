{"version":3,"sources":["App.module.css","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","views/ContactsPage.js"],"names":["module","exports","axios","defaults","baseURL","initContacts","dispatch","a","initContactsRequest","get","data","initContactsSuccess","initContactsError","addContact","name","number","contact","addContactRequest","post","addContactSuccess","addContactError","deleteContact","id","deleteContactRequest","delete","deleteContactSuccess","deleteContactError","getAllContacts","state","contacts","items","getFilterValue","filter","getModalValue","modal","getLoadingValue","loading","getSearchedContacts","createSelector","toLowerCase","includes","ContactForm","getContactData","event","currentTarget","value","setState","handleSubmit","preventDefault","props","resetForm","console","log","this","className","styles","container","onSubmit","formContainer","TextField","style","margin","fullWidth","label","type","onChange","marginBottom","Button","disableRipple","color","variant","Component","mapDispatchToProps","contactsOperations","connect","contactsSelectors","Filter","filterHandler","filterContacts","filterValue","filterContainer","contactsAction","ContactList","searchedContacts","contactList","map","contactListItem","contactData","removeButton","onClick","onEditClick","changeContact","ContactsPage","contactForEdit","getContactForEdit","onAddBtn","s","filter__add__container","Paper","elevation","addContact__container","contacts__title","openModal"],"mappings":"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","file":"static/js/contacts-page.44791fa9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\",\"container\":\"App_container__1MQN3\",\"title\":\"App_title__-GfWs\",\"contacts__title\":\"App_contacts__title__3a-ik\",\"add__btn\":\"App_add__btn__1cn98\",\"filter__add__container\":\"App_filter__add__container__2iOpB\",\"main__title\":\"App_main__title__15qBx\",\"login__container\":\"App_login__container__1CoUi\",\"reg__container\":\"App_reg__container__1clPi\",\"addContact__container\":\"App_addContact__container__3Rk0R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactForm_container__1INJV\",\"formContainer\":\"ContactForm_formContainer__ad5_t\",\"formLabel\":\"ContactForm_formLabel__1hDC-\",\"inputForm\":\"ContactForm_inputForm__2GJhT\",\"formBtn\":\"ContactForm_formBtn__1YZTU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__3MzlG\",\"contactListItem\":\"ContactList_contactListItem__1l6Fa\",\"contactData\":\"ContactList_contactData__18BiC\",\"removeButton\":\"ContactList_removeButton__1aF_o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterContainer\":\"Filter_filterContainer__2eDOn\"};","import axios from 'axios';\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactSuccess,\n  deleteContactRequest,\n  deleteContactError,\n  initContactsRequest,\n  initContactsSuccess,\n  initContactsError,\n} from './contacts-action';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\nconst initContacts = () => async dispatch => {\n  dispatch(initContactsRequest());\n\n  try {\n    const { data } = await axios.get('/contacts');\n\n    dispatch(initContactsSuccess(data));\n  } catch (error) {\n    dispatch(initContactsError(error));\n  }\n};\n\nconst addContact = (name, number) => async dispatch => {\n  const contact = {\n    name,\n    number,\n  };\n\n  dispatch(addContactRequest());\n\n  try {\n    const { data } = await axios.post('/contacts', contact);\n    dispatch(addContactSuccess(data));\n  } catch (error) {\n    dispatch(addContactError(error));\n  }\n};\n\nconst deleteContact = id => async dispatch => {\n  dispatch(deleteContactRequest());\n\n  try {\n    await axios.delete(`/contacts/${id}`);\n    dispatch(deleteContactSuccess(id));\n  } catch (error) {\n    dispatch(deleteContactError(error));\n  }\n};\n\nexport { addContact, deleteContact, initContacts };\n","import { createSelector } from 'reselect';\n\nconst getAllContacts = state => state.contacts.items;\n\nconst getFilterValue = state => state.contacts.filter;\n\nconst getModalValue = state => state.contacts.modal;\n\nconst getLoadingValue = state => state.contacts.loading;\n\nconst getSearchedContacts = createSelector(\n  [getAllContacts, getFilterValue],\n  (items, filter) => {\n    return items.filter(({ name }) => {\n      return name.toLowerCase().includes(filter.toLowerCase());\n    });\n  },\n);\n\nexport {\n  getAllContacts,\n  getFilterValue,\n  getSearchedContacts,\n  getModalValue,\n  getLoadingValue,\n};\n","import { Component } from 'react';\nimport styles from './ContactForm.module.css';\nimport { TextField, Button } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { contactsOperations, contactsSelectors } from '../../redux/contacts';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  getContactData = event => {\n    const { name, value } = event.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    const { name, number } = this.state;\n    const { addContact } = this.props;\n\n    this.resetForm();\n\n    addContact(name, number);\n    console.log(addContact);\n  };\n\n  resetForm = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    console.log(this.props);\n    return (\n      <div className={styles.container}>\n        <form onSubmit={this.handleSubmit} className={styles.formContainer}>\n          <TextField\n            style={{ margin: 10 }}\n            fullWidth\n            name=\"name\"\n            label=\"Name\"\n            type=\"text\"\n            value={this.state.name}\n            onChange={this.getContactData}\n          />\n          <TextField\n            style={{ marginBottom: 20 }}\n            fullWidth\n            name=\"number\"\n            label=\"Phone number\"\n            type=\"text\"\n            value={this.state.number}\n            onChange={this.getContactData}\n          />\n          <Button\n            disableRipple\n            color=\"primary\"\n            variant=\"contained\"\n            fullWidth\n            type=\"submit\"\n          >\n            Add contact\n          </Button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  contacts: contactsSelectors.getAllContacts(state),\n});\n\nconst mapDispatchToProps = {\n  addContact: contactsOperations.addContact,\n};\n\nContactForm.propTypes = {\n  addContact: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import React, { Component } from 'react';\n\nimport styles from './Filter.module.css';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { contactsAction, contactsSelectors } from '../../redux/contacts';\nimport { TextField } from '@material-ui/core';\n\nclass Filter extends Component {\n  filterHandler = event => {\n    const { value } = event.currentTarget;\n    const { filterContacts } = this.props;\n    filterContacts(value);\n  };\n\n  render() {\n    const { filterValue } = this.props;\n    return (\n      <div className={styles.filterContainer}>\n        <TextField\n          fullWidth\n          style={{ marginBottom: 10 }}\n          name=\"filter\"\n          label=\"Contact search\"\n          value={filterValue}\n          onChange={this.filterHandler}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  filterValue: contactsSelectors.getFilterValue(state),\n});\n\nconst mapDispatchToProps = {\n  filterContacts: contactsAction.filterContacts,\n};\n\nFilter.propTypes = {\n  filterContacts: PropTypes.func.isRequired,\n  filterValue: PropTypes.string.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import { Component } from 'react';\nimport styles from './ContactList.module.css';\nimport Filter from '../Filter/Filter';\nimport { connect } from 'react-redux';\n\nimport PropTypes from 'prop-types';\nimport {\n  contactsAction,\n  contactsOperations,\n  contactsSelectors,\n} from '../../redux/contacts';\n\nclass ContactList extends Component {\n  componentDidMount() {\n    console.log(this.props);\n    this.props.initContacts();\n    console.log('+');\n  }\n\n  render() {\n    const { deleteContact, searchedContacts } = this.props;\n    console.log(this.state);\n    return (\n      <>\n        <Filter />\n        <ul className={styles.contactList}>\n          {searchedContacts &&\n            searchedContacts.map(({ name, number, id }) => (\n              <li key={id} className={styles.contactListItem}>\n                <p className={styles.contactData}>\n                  {name}: {number}\n                </p>\n                <button\n                  className={styles.removeButton}\n                  type=\"button\"\n                  onClick={() => deleteContact(id)}\n                >\n                  X\n                </button>\n              </li>\n            ))}\n        </ul>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  searchedContacts: contactsSelectors.getSearchedContacts(state),\n  filterValue: contactsSelectors.getFilterValue(state),\n});\n\nconst mapDispatchToProps = {\n  deleteContact: id => contactsOperations.deleteContact(id),\n  initContacts: contactsOperations.initContacts,\n  onEditClick: contactsAction.changeContact,\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n\n  filterValue: PropTypes.string.isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import { Component } from 'react';\nimport s from '../App.module.css';\nimport ContactForm from '../components/ContactForm/ContactForm';\nimport ContactList from '../components/ContactList/ContactList';\nimport Paper from '@material-ui/core/Paper';\nimport { connect } from 'react-redux';\nimport { contactsAction, contactsSelectors } from '../redux/contacts';\n\nclass ContactsPage extends Component {\n  state = {\n    contactForEdit: null,\n  };\n\n  getContactForEdit = contactForEdit => {\n    this.setState({ contactForEdit });\n  };\n\n  onAddBtn = () => {\n    this.setState({ contactForEdit: null });\n  };\n\n  render() {\n    return (\n      <div>\n        <div className={s.filter__add__container}></div>\n        <Paper elevation={3} className={s.addContact__container}>\n          <ContactForm />\n        </Paper>\n        <div className={s.container}>\n          <h2 className={s.contacts__title}>Contact list</h2>\n          <ContactList contactForEdit={this.getContactForEdit} />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  modal: contactsSelectors.getModalValue(state),\n});\n\nconst mapDispatchToProps = {\n  openModal: contactsAction.openModal,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsPage);\n"],"sourceRoot":""}